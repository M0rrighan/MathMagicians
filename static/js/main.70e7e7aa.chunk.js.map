{"version":3,"sources":["components/Display.js","components/Button.js","components/Buttons.js","logic/operate.js","components/Calculator.js","logic/calculate.js","components/Header.js","components/WelcomePage.js","components/Quote.js","components/App.js","index.js"],"names":["Display","resultString","className","Button","updateCalculator","buttonName","type","onClick","Buttons","buttons","map","btnName","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","useState","total","next","state","setState","obj","match","includes","parseFloat","Header","style","display","flexWrap","justifyContent","alignItems","gap","fontSize","padding","boxShadow","fontWeight","listStyle","id","path","text","link","cursor","to","WelcomePage","Quote","pathToRandomMathQuote","quoteText","author","quote","setQuote","useEffect","fetch","then","response","json","data","marginTop","paddingTop","color","App","basename","exact","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70e7e7aa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Display = ({ resultString }) => (\n  <div className=\"display\">\n    { resultString }\n  </div>\n);\n\nDisplay.propTypes = {\n  resultString: PropTypes.string.isRequired,\n};\n\nexport default Display;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ updateCalculator, buttonName }) => {\n  // const { updateCalculator, buttonName } = props;\n\n  function handleClick() {\n    updateCalculator(buttonName);\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn\"\n      onClick={handleClick}\n    >\n      {buttonName}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  updateCalculator: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\nconst Buttons = ({ updateCalculator }) => {\n  const buttonNames = [\n    'AC', '+/-', '%', 'รท',\n    '7', '8', '9', 'x',\n    '4', '5', '6', '-',\n    '1', '2', '3', '+',\n    '0', '.', '=',\n  ];\n\n  const buttons = buttonNames.map((btnName) => (\n    <Button\n      key={btnName}\n      buttonName={btnName}\n      updateCalculator={updateCalculator}\n    />\n  ));\n\n  return (\n    <div className=\"buttons\">\n      {buttons}\n    </div>\n  );\n};\n\nButtons.propTypes = {\n  updateCalculator: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport Display from './Display';\nimport Buttons from './Buttons';\nimport calculate from '../logic/calculate';\n\nconst Calculator = () => {\n  const [state, setState] = useState(\n    {\n      total: null,\n      next: null,\n      operation: null,\n    },\n  );\n\n  const updateState = (btnName) => {\n    setState(() => calculate(state, btnName));\n  };\n\n  const { total, next, operation } = state;\n  let resultString = '';\n  if (total) {\n    resultString = `${total} ${operation || ''} ${next || ''}`;\n  } else if (next) {\n    resultString = `${next} ${operation || ''}`;\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Let&rsquo;s do some math!</h2>\n      <div className=\"calculator\">\n        <Display resultString={resultString || '0'} />\n        <Buttons updateCalculator={updateState} />\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 2,\n      path: '/Calculator',\n      text: 'Calculator',\n    },\n    {\n      id: 3,\n      path: '/Quote',\n      text: 'Quote',\n    },\n  ];\n\n  const headerStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    gap: '2rem',\n    fontSize: '1.5rem',\n    padding: '1rem 2rem',\n    boxShadow: '0px 10px 30px 5px hsl(0deg 0% 40% / 50%), inset 0px 4px 10px 5px hsl(0deg 0% 59% / 50%)',\n  };\n\n  const navUlStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '1.25rem',\n    listStyle: 'none',\n    fontWeight: '600',\n  };\n\n  return (\n    <header className=\"header\" style={headerStyle}>\n      <h1 style={{ fontWeight: '900' }}>\n        Math Magicians\n      </h1>\n      <nav>\n        <ul style={navUlStyle}>\n          { links.map((link) => (\n            <li key={link.id} style={{ cursor: 'pointer' }}>\n              <NavLink to={link.path}>\n                {link.text}\n              </NavLink>\n            </li>\n          )) }\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport './WelcomePage.css';\n\nconst WelcomePage = () => (\n  <div className=\"welcome-page\">\n    <h2>Welcome to Math Magicians</h2>\n    <p>A calculator is a device that performs arithmetic operations on numbers. The simplest calculators can do only addition, subtraction, multiplication, and division. More sophisticated calculators can handle exponent ial operations, roots, logarithm s, trigonometric functions, and hyperbolic functions. Internally, some calculators actually perform all of these functions by repeated processes of addition.</p>\n    <p>Most calculators these days require electricity to operate. Portable, battery-powered calculators are popular with engineers and engineering students. Before 1970, a more primitive form of calculator, the slide rule , was commonly used. It consisted of a slat of wood, called the slide, that could be moved in and out of a reinforced pair of slats. Both the slide and the outer pair of slats had calibrated numerical scales. A movable, transparent sleeve called the cursor was used to align numerals on the scales. The slide rule did not require any source of power, but its precision was limited, and it was necessary to climb a learning curve to become proficient with it.</p>\n  </div>\n);\n\nexport default WelcomePage;\n","import React, { useState, useEffect } from 'react';\n\nconst Quote = () => {\n  const pathToRandomMathQuote = 'https://random-math-quote-api.herokuapp.com/';\n  const [quote, setQuote] = useState(\n    {\n      quoteText: 'Go down deep enough into anything and you will find mathematics',\n      author: 'Dean Schlicter',\n    },\n  );\n\n  useEffect(() => {\n    fetch(pathToRandomMathQuote)\n      .then((response) => response.json())\n      .then((data) => setQuote({\n        quoteText: data.quote,\n        author: data.author,\n      }));\n  }, []);\n\n  const quoteStyle = {\n    fontSize: '1.5rem',\n    marginTop: '4rem',\n    padding: '1rem 3rem',\n  };\n\n  const { quoteText, author } = quote;\n\n  return (\n    <div style={quoteStyle}>\n      <h2 style={{ paddingTop: '1rem' }}>Random Quote:</h2>\n      <small style={{ color: '#777' }}>\n        <span>Fetched from: </span>\n        {pathToRandomMathQuote}\n      </small>\n      <p style={{ padding: '1.75rem 0' }}>\n        {quoteText}\n        {' - '}\n        {author}\n      </p>\n    </div>\n  );\n};\n\nexport default Quote;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Calculator from './Calculator';\nimport Header from './Header';\nimport WelcomePage from './WelcomePage';\nimport Quote from './Quote';\n\nconst App = () => (\n  <Router basename=\"/math-magicians\">\n    <div>\n      <Header />\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={<WelcomePage />}\n        />\n        <Route\n          path=\"/Calculator\"\n          element={<Calculator />}\n        />\n        <Route\n          exact\n          path=\"/Quote\"\n          element={<Quote />}\n        />\n      </Routes>\n    </div>\n  </Router>\n);\n\nexport default App;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}