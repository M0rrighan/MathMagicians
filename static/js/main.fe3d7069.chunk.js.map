{"version":3,"sources":["components/Display.js","components/Button.js","components/Buttons.js","logic/operate.js","components/Calculator.js","logic/calculate.js","components/App.js","index.js"],"names":["Display","props","resultString","this","className","Component","Button","handleClick","bind","updateCalculator","buttonName","type","onClick","Buttons","buttons","map","btnName","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","state","total","next","updateState","setState","obj","match","includes","parseFloat","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe3d7069.chunk.js","sourcesContent":["/* eslint-disable no-useless-constructor */\n/* eslint-disable react/prefer-stateless-function */\n// eslint-disable-line import/no-extraneous-dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Display extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { resultString } = this.props;\n    return (\n      <div className=\"display\">\n        { resultString }\n      </div>\n    );\n  }\n}\n\nDisplay.propTypes = {\n  resultString: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-useless-constructor */\n/* eslint-disable react/prefer-stateless-function */\n// eslint-disable-line import/no-extraneous-dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { updateCalculator, buttonName } = this.props;\n    updateCalculator(buttonName);\n  }\n\n  render() {\n    const { buttonName } = this.props;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn\"\n        onClick={this.handleClick}\n      >\n        {buttonName}\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  updateCalculator: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-useless-constructor */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\nexport default class Buttons extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const buttonNames = [\n      'AC', '+/-', '%', 'รท',\n      '7', '8', '9', 'x',\n      '4', '5', '6', '-',\n      '1', '2', '3', '+',\n      '0', '.', '=',\n    ];\n\n    const { updateCalculator } = this.props;\n\n    const buttons = buttonNames.map((btnName) => (\n      <Button\n        key={btnName}\n        buttonName={btnName}\n        updateCalculator={updateCalculator}\n      />\n    ));\n    return (\n      <div className=\"buttons\">\n        {buttons}\n      </div>\n    );\n  }\n}\n\nButtons.propTypes = {\n  updateCalculator: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport Display from './Display';\nimport Buttons from './Buttons';\nimport calculate from '../logic/calculate';\n\nexport default class Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: null,\n      next: null,\n      operation: null,\n    };\n\n    this.updateState = this.updateState.bind(this);\n  }\n\n  updateState(btnName) {\n    const { total, next, operation } = this.state;\n    this.setState(() => calculate({ total, next, operation }, btnName));\n  }\n\n  render() {\n    const { total, next, operation } = this.state;\n    let resultString = '';\n    if (total) {\n      resultString = `${total} ${operation || ''} ${next || ''}`;\n    } else if (next) {\n      resultString = `${next} ${operation || ''}`;\n    }\n\n    return (\n      <div className=\"calculator\">\n        <Display resultString={resultString || 0} />\n        <Buttons updateCalculator={this.updateState} />\n      </div>\n    );\n  }\n}\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport Calculator from './Calculator';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"calc-container\">\n        <Calculator />\n      </div>\n    );\n  }\n}\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}